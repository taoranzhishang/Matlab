>> student.name='taoranzhishang'

student = 

  包含以下字段的 struct:

    name: 'taoranzhishang'

>> student.id=1030

student = 

  包含以下字段的 struct:

    name: 'taoranzhishang'
      id: 1030

>> student.grades=[100 90 90;99.9 80 90]

student = 

  包含以下字段的 struct:

      name: 'taoranzhishang'
        id: 1030
    grades: [2×3 double]

>> student

student = 

  包含以下字段的 struct:

      name: 'taoranzhishang'
        id: 1030
    grades: [2×3 double]

>> student(2).name='wu'

student = 

  包含以下字段的 1×2 struct 数组:

    name
    id
    grades

>> student(2).id=0918

student = 

  包含以下字段的 1×2 struct 数组:

    name
    id
    grades

>> student(2).grades=[100 100 100;100 100 100]

student = 

  包含以下字段的 1×2 struct 数组:

    name
    id
    grades

>> sutdent
未定义函数或变量 'sutdent'。
 
是不是想输入:
>> student

student = 

  包含以下字段的 1×2 struct 数组:

    name
    id
    grades

>> SIZE=size(student)

SIZE =

     1     2

>> student2=struct('name','li','id',1001,'grades',[80 80 80;90 90 90])

student2 = 

  包含以下字段的 struct:

      name: 'li'
        id: 1001
    grades: [2×3 double]

>> name=student2(1).name

name =

    'li'

>> student2(1).name='wang'

student2 = 

  包含以下字段的 struct:

      name: 'wang'
        id: 1001
    grades: [2×3 double]

>> info=student(1:2)

info = 

  包含以下字段的 1×2 struct 数组:

    name
    id
    grades

>> info(2)

ans = 

  包含以下字段的 struct:

      name: 'wu'
        id: 918
    grades: [2×3 double]

>> id=[student.id]

id =

        1030         918

>> grade={student(1:2).grade}
引用了不存在的字段 'grade'。
 
>> grade={student(1:2).grades}

grade =

  1×2 cell 数组

    {2×3 double}    {2×3 double}

>> student(1).gender='F'

student = 

  包含以下字段的 1×2 struct 数组:

    name
    id
    grades
    gender

>> student(1).gender='M'

student = 

  包含以下字段的 1×2 struct 数组:

    name
    id
    grades
    gender

>> student=rmfield(student,'gender')

student = 

  包含以下字段的 1×2 struct 数组:

    name
    id
    grades

>> A(1,1)={[1 2 3;4 5 6; 7 8 9]}

A =

  1×1 cell 数组

    {3×3 double}

>> A(1,2)={'tao'}

A =

  1×2 cell 数组

    {3×3 double}    {'tao'}

>> A(2,1)={3+i}

A =

  2×2 cell 数组

    {3×3 double        }    {'tao'     }
    {[3.0000 + 1.0000i]}    {0×0 double}

>> A(2,2)={pi:-pi:pi/10}

A =

  2×2 cell 数组

    {3×3 double        }    {'tao'   }
    {[3.0000 + 1.0000i]}    {[3.1416]}

>> A

A =

  2×2 cell 数组

    {3×3 double        }    {'tao'   }
    {[3.0000 + 1.0000i]}    {[3.1416]}

>> B{1,1}=[9 8 7;6 5 4;3 2 1]

B =

  1×1 cell 数组

    {3×3 double}

>> B{1,2}='wu'

B =

  1×2 cell 数组

    {3×3 double}    {'wu'}

>> B{2,2}=3+2i

B =

  2×2 cell 数组

    {3×3 double}    {'wu'              }
    {0×0 double}    {[3.0000 + 2.0000i]}

>> B{2,1}=pi:-pi:pi/100

B =

  2×2 cell 数组

    {3×3 double}    {'wu'              }
    {[  3.1416]}    {[3.0000 + 2.0000i]}

>> B

B =

  2×2 cell 数组

    {3×3 double}    {'wu'              }
    {[  3.1416]}    {[3.0000 + 2.0000i]}

>> C=cell(2,3)

C =

  2×3 cell 数组

    {0×0 double}    {0×0 double}    {0×0 double}
    {0×0 double}    {0×0 double}    {0×0 double}

>> C(2,2)={'su'}

C =

  2×3 cell 数组

    {0×0 double}    {0×0 double}    {0×0 double}
    {0×0 double}    {'su'      }    {0×0 double}

>> B1=B(1,1)

B1 =

  1×1 cell 数组

    {3×3 double}

>> B1=B{1,1}

B1 =

     9     8     7
     6     5     4
     3     2     1

>> B2=B{2,1}

B2 =

    3.1416

>> B2=B{2,2}

B2 =

   3.0000 + 2.0000i

>> B3=B(:)

B3 =

  4×1 cell 数组

    {3×3 double        }
    {[          3.1416]}
    {'wu'              }
    {[3.0000 + 2.0000i]}

>> B4=B(:,1)

B4 =

  2×1 cell 数组

    {3×3 double}
    {[  3.1416]}

>> B5=B(1,:)

B5 =

  1×2 cell 数组

    {3×3 double}    {'wu'}

>> C1=reshape(C,3,2)

C1 =

  3×2 cell 数组

    {0×0 double}    {'su'      }
    {0×0 double}    {0×0 double}
    {0×0 double}    {0×0 double}

>> C1(2,1)=1
无法从 double 转换为 cell。
 
>> C1{2,1}=1

C1 =

  3×2 cell 数组

    {0×0 double}    {'su'      }
    {[       1]}    {0×0 double}
    {0×0 double}    {0×0 double}

>> C1(2)=[]

C1 =

  1×5 cell 数组

    {0×0 double}    {0×0 double}    {'su'}    {0×0 double}    {0×0 double}

>> D=categorical({1;'tao';'wu';2;1})
错误使用 categorical (line 357)
无法使用 UNIQUE 函数查找 DATA 中的唯一值。

原因:
    错误使用 cell/unique (line 85)
    元胞数组输入必须为字符向量元胞数组。
 
>> D=categorical({'1';'tao';'wu';'1';'1'})

D = 

  5×1 categorical 数组

     1 
     tao 
     wu 
     1 
     1 

>> D1=categories(D)

D1 =

  3×1 cell 数组

    {'1'  }
    {'tao'}
    {'wu' }

>> D2=[1 2;3 4;5 6]

D2 =

     1     2
     3     4
     5     6

>> values=[1:3]

values =

     1     2     3

>> catnames={'A','B','C'}

catnames =

  1×3 cell 数组

    {'A'}    {'B'}    {'C'}

>> D3=categorical(A,values,catnemes)
未定义函数或变量 'catnemes'。
 
是不是想输入:
>> D3=categorical(A,values,catnames)
错误使用 categorical (line 583)
VALUESET 的类必须与 DATA 的类相同。
 
>> D2=[1 2;3 4;5 6]

D2 =

     1     2
     3     4
     5     6

>> D2=[1 2;2 2;1 3]

D2 =

     1     2
     2     2
     1     3

>> D3=categorical(A,values,catnames)
错误使用 categorical (line 583)
VALUESET 的类必须与 DATA 的类相同。
 
>> bl=iscategorical(D)

bl =

  logical

   1

>> catnames={'A';'B';'C'}

catnames =

  3×1 cell 数组

    {'A'}
    {'B'}
    {'C'}

>> D3=categorical(A,values,catnames)
错误使用 categorical (line 583)
VALUESET 的类必须与 DATA 的类相同。
 
>> E={'a';'b';'c'}

E =

  3×1 cell 数组

    {'a'}
    {'b'}
    {'c'}

>> E=addcats(E,{'d';'e'})
未定义与 'cell' 类型的输入参数相对应的函数 'addcats'。
 
>> F=categorical({'a';'b';'c';'d'})

F = 

  4×1 categorical 数组

     a 
     b 
     c 
     d 

>> F1=mergecats(A,{'a','d'})
未定义与 'cell' 类型的输入参数相对应的函数 'mergecats'。
 
>> 